{"version":3,"sources":["webpack:///./src/views/test/dialog.vue?10ae","webpack:///src/views/test/dialog.vue","webpack:///./src/views/test/dialog.vue?60c2","webpack:///./src/views/test/dialog.vue","webpack:///./node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/regenerator-runtime/runtime.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","padding","color","label","on","click","$event","customDialogModel","icon","stack-buttons","prevent-close","cancel","onCancel","ok","onOk","show","onShow","hide","onHide","scopedSlots","_u","key","fn","props","flat","model","value","callback","$$v","expression","slot","_v","helper","label-width","error","nameError","name","staticRenderFns","dialogvue_type_script_lang_js_","methods","openSpecialPosition","position","$q","dialog","title","message","concat","console","log","choose","_choose","Object","asyncToGenerator","regeneratorRuntime","mark","_callee","okFn","hero","wrap","_context","prev","next","length","notify","stop","_x","_x2","apply","arguments","watch","val","err","data","_this","positionalIcon","top","right","bottom","left","types","handler","then","catch","prompt","type","options","items","preventClose","JSON","stringify","stackButtons","test_dialogvue_type_script_lang_js_","component","componentNormalizer","__file","__webpack_exports__","_asyncToGenerator","self","args","Promise","resolve","reject","gen","step","arg","info","done","_next","_throw","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","NAME","configurable","get","match","e","global","undefined","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","module","runtime","exports","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","result","toString","keys","object","push","reverse","pop","Context","reset","skipTempReset","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","rootEntry","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","makeInvokeMethod","tryCatch","obj","invoke","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","state","doneResult","delegateResult","maybeInvokeDelegate","return","TypeError","pushTryEntry","locs","iteratorMethod"],"mappings":"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","file":"js/chunk-27d6.58fd1590.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('q-page',{attrs:{\"padding\":\"\"}},[_c('q-btn',{attrs:{\"color\":\"primary\",\"label\":\"Show Dialog\"},on:{\"click\":function($event){_vm.customDialogModel = true}}}),_c('q-btn',{attrs:{\"icon\":\"create\",\"label\":\"New item\"}}),_c('q-dialog',{attrs:{\"stack-buttons\":\"\",\"prevent-close\":\"\"},on:{\"cancel\":_vm.onCancel,\"ok\":_vm.onOk,\"show\":_vm.onShow,\"hide\":_vm.onHide},scopedSlots:_vm._u([{key:\"buttons\",fn:function(props){return [_c('q-btn',{attrs:{\"flat\":\"\",\"label\":\"No thanks\"},on:{\"click\":props.cancel}})]}}]),model:{value:(_vm.customDialogModel),callback:function ($$v) {_vm.customDialogModel=$$v},expression:\"customDialogModel\"}},[_c('span',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"Add News\")]),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('q-field',{attrs:{\"icon\":\"account_circle\",\"helper\":\"We need your name so we can send you to the movies.\",\"label\":\"Your name\",\"label-width\":3,\"error\":_vm.nameError}},[_c('q-input',{model:{value:(_vm.name),callback:function ($$v) {_vm.name=$$v},expression:\"name\"}})],1)],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <q-page padding >\r\n\r\n      <q-btn color=\"primary\" @click=\"customDialogModel = true\" label=\"Show Dialog\" />\r\n      <q-btn icon=\"create\" label=\"New item\" />  \r\n      <q-dialog\r\n        v-model=\"customDialogModel\"\r\n        stack-buttons\r\n        prevent-close\r\n        @cancel=\"onCancel\"\r\n        @ok=\"onOk\"\r\n        @show=\"onShow\"\r\n        @hide=\"onHide\"\r\n      >\r\n        <!-- This or use \"title\" prop on <q-dialog> -->\r\n        <span slot=\"title\">Add News</span>\r\n\r\n\r\n        <div slot=\"body\">\r\n          <q-field\r\n            icon=\"account_circle\"\r\n            helper=\"We need your name so we can send you to the movies.\"\r\n            label=\"Your name\"\r\n            :label-width=\"3\"\r\n            :error=\"nameError\"\r\n          >\r\n            <q-input v-model=\"name\" />\r\n          </q-field>\r\n        </div>\r\n\r\n        <template slot=\"buttons\" slot-scope=\"props\">\r\n          <q-btn flat label=\"No thanks\" @click=\"props.cancel\" />\r\n        </template>\r\n      </q-dialog>\r\n \r\n  </q-page>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  methods: {\r\n    openSpecialPosition (position) {\r\n      this.$q.dialog({\r\n        title: 'Positioned',\r\n        message: `This dialog appears from ${position}.`,\r\n        position\r\n      })\r\n    },\r\n    onOk () {\r\n      console.log('ok')\r\n    },\r\n    onCancel () {\r\n      console.log('cancel')\r\n    },\r\n    onShow () {\r\n      console.log('show')\r\n    },\r\n    onHide () {\r\n      console.log('hide')\r\n    },\r\n    async choose (okFn, hero) {\r\n      if (this.name.length === 0) {\r\n        this.error = true\r\n        this.$q.dialog({\r\n          title: 'Please specify your name!',\r\n          message: `Can't buy tickets without knowing your name.`\r\n        })\r\n      }\r\n      else {\r\n        await okFn()\r\n        this.$q.notify(`Ok ${this.name}, going with ${hero}`)\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    name (val) {\r\n      const err = val.length === 0\r\n      if (this.nameError !== err) {\r\n        this.nameError = err\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      customDialogModel: false,\r\n      name: '',\r\n      nameError: false,\r\n      positionalIcon: {\r\n        top: 'arrow_upward',\r\n        right: 'arrow_forward',\r\n        bottom: 'arrow_downward',\r\n        left: 'arrow_back'\r\n      },\r\n      types: [\r\n        {\r\n          label: 'Alert',\r\n          icon: 'warning',\r\n          handler: () => {\r\n            this.$q.dialog({\r\n              title: 'Alert',\r\n              message: 'Modern HTML5 front-end framework on steroids.'\r\n            })\r\n          }\r\n        },\r\n        {\r\n          label: 'Confirm',\r\n          icon: 'done_all',\r\n          handler: () => {\r\n            this.$q.dialog({\r\n              title: 'Confirm',\r\n              message: 'Modern HTML5 front-end framework on steroids.',\r\n              ok: 'Agree',\r\n              cancel: 'Disagree'\r\n            }).then(() => {\r\n              this.$q.notify('Agreed!')\r\n            }).catch(() => {\r\n              this.$q.notify('Disagreed...')\r\n            })\r\n          }\r\n        },\r\n        {\r\n          label: 'Prompt',\r\n          icon: 'help',\r\n          handler: () => {\r\n            this.$q.dialog({\r\n              title: 'Prompt',\r\n              message: 'Modern front-end framework on steroids.',\r\n              prompt: {\r\n                model: '',\r\n                type: 'text' // optional\r\n              },\r\n              cancel: true,\r\n              color: 'secondary'\r\n            }).then(data => {\r\n              this.$q.notify(`You typed: \"${data}\"`)\r\n            }).catch(() => {\r\n              this.$q.notify('Ok, no mood for talking, right?')\r\n            })\r\n          }\r\n        },\r\n        {\r\n          label: 'Single Choice Selection',\r\n          icon: 'radio_button_checked',\r\n          handler: () => {\r\n            this.$q.dialog({\r\n              title: 'Options',\r\n              message: 'Modern front-end framework on steroids.',\r\n              options: {\r\n                type: 'radio',\r\n                model: 'opt2',\r\n                items: [\r\n                  {label: 'Option 1', value: 'opt1', color: 'secondary'},\r\n                  {label: 'Option 2', value: 'opt2'},\r\n                  {label: 'Option 3', value: 'opt3'}\r\n                ]\r\n              },\r\n              cancel: true,\r\n              preventClose: true,\r\n              color: 'secondary'\r\n            }).then(data => {\r\n              this.$q.notify(`You selected: ${data}`)\r\n            })\r\n          }\r\n        },\r\n        {\r\n          label: 'Multiple Choice Selection',\r\n          icon: 'check_box',\r\n          handler: () => {\r\n            this.$q.dialog({\r\n              title: 'Options',\r\n              message: 'Modern front-end framework on steroids.',\r\n              options: {\r\n                type: 'checkbox',\r\n                model: [],\r\n                items: [\r\n                  {label: 'Option 1', value: 'opt1', color: 'secondary'},\r\n                  {label: 'Option 2', value: 'opt2'},\r\n                  {label: 'Option 3', value: 'opt3'}\r\n                ]\r\n              },\r\n              cancel: true,\r\n              preventClose: true,\r\n              color: 'secondary'\r\n            }).then(data => {\r\n              this.$q.notify(`You selected: ${JSON.stringify(data)}`)\r\n            })\r\n          }\r\n        }\r\n      ],\r\n      options: [\r\n        {\r\n          label: 'Stacked Buttons',\r\n          icon: 'dns',\r\n          handler: () => {\r\n            this.$q.dialog({\r\n              title: 'Stacked buttons',\r\n              message: 'Go to a movie.',\r\n              ok: 'Yes, please!',\r\n              cancel: 'Uhm, nope',\r\n              stackButtons: true\r\n            }).then(() => {\r\n              this.$q.notify('Agreed!')\r\n            }).catch(() => {\r\n              this.$q.notify('Disagreed...')\r\n            })\r\n          }\r\n        },\r\n        {\r\n          label: 'Prevent accidental close',\r\n          icon: 'power_settings_new',\r\n          handler: () => {\r\n            this.$q.dialog({\r\n              title: 'Prevent close',\r\n              message: 'This dialog cannot be dismissed by clicking/tapping on the background overlay.',\r\n              ok: true,\r\n              cancel: true,\r\n              preventClose: true\r\n            }).then(() => {\r\n              this.$q.notify('You said OK!')\r\n            }).catch(() => {\r\n              this.$q.notify(`You didn't agree`)\r\n            })\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./dialog.vue?vue&type=template&id=66226f7a&\"\nimport script from \"./dialog.vue?vue&type=script&lang=js&\"\nexport * from \"./dialog.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"dialog.vue\"\nexport default component.exports","export default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          Promise.resolve(value).then(_next, _throw);\n        }\n      }\n\n      function _next(value) {\n        step(\"next\", value);\n      }\n\n      function _throw(err) {\n        step(\"throw\", err);\n      }\n\n      _next();\n    });\n  };\n}","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n"],"sourceRoot":""}